{
  "version": 3,
  "sources": ["../iter/awgn/lib/defaults.js", "../iter/awgn/lib/main.js", "../iter/awgn/lib/index.js", "../iter/awln/lib/defaults.js", "../iter/awln/lib/main.js", "../iter/awln/lib/index.js", "../iter/awun/lib/defaults.js", "../iter/awun/lib/main.js", "../iter/awun/lib/index.js", "../iter/bartlett-hann-pulse/lib/validate.js", "../iter/bartlett-hann-pulse/lib/main.js", "../iter/bartlett-hann-pulse/lib/index.js", "../iter/bartlett-pulse/lib/validate.js", "../iter/bartlett-pulse/lib/main.js", "../iter/bartlett-pulse/lib/index.js", "../iter/cosine-wave/lib/validate.js", "../iter/cosine-wave/lib/main.js", "../iter/cosine-wave/lib/index.js", "../iter/dirac-comb/lib/validate.js", "../iter/dirac-comb/lib/main.js", "../iter/dirac-comb/lib/index.js", "../iter/flat-top-pulse/lib/validate.js", "../iter/flat-top-pulse/lib/main.js", "../iter/flat-top-pulse/lib/index.js", "../iter/hann-pulse/lib/validate.js", "../iter/hann-pulse/lib/main.js", "../iter/hann-pulse/lib/index.js", "../iter/lanczos-pulse/lib/validate.js", "../iter/lanczos-pulse/lib/main.js", "../iter/lanczos-pulse/lib/index.js", "../iter/periodic-sinc/lib/validate.js", "../iter/periodic-sinc/lib/main.js", "../iter/periodic-sinc/lib/index.js", "../iter/pulse/lib/validate.js", "../iter/pulse/lib/main.js", "../iter/pulse/lib/index.js", "../iter/sawtooth-wave/lib/validate.js", "../iter/sawtooth-wave/lib/main.js", "../iter/sawtooth-wave/lib/index.js", "../iter/sine-wave/lib/validate.js", "../iter/sine-wave/lib/main.js", "../iter/sine-wave/lib/index.js", "../iter/square-wave/lib/validate.js", "../iter/square-wave/lib/main.js", "../iter/square-wave/lib/index.js", "../iter/triangle-wave/lib/validate.js", "../iter/triangle-wave/lib/main.js", "../iter/triangle-wave/lib/index.js", "../iter/lib/index.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'copy': true\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = defaults;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar setReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isUint32Array = require( '@stdlib/assert/is-uint32array' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar noop = require( '@stdlib/utils/noop' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar randn = require( '@stdlib/random/base/improved-ziggurat' ).factory;\nvar defaults = require( './defaults.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which introduces additive white Gaussian noise with standard deviation `sigma`.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveNumber} sigma - standard deviation of the noise\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates pseudorandom numbers drawn from a standard normal distribution\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive number\n* @throws {TypeError} third argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {Iterator} iterator\n*\n* @example\n* var iterSineWave = require( '@stdlib/simulate/iter/sine-wave' );\n*\n* var sine = iterSineWave({\n*     'iter': 100\n* });\n*\n* var it = iterawgn( sine, 0.5 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterawgn( iterator, sigma, options ) {\n\tvar rnorm;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveNumber( sigma ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive number. Value: `%s`.', sigma ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\topts.copy = options.copy;\n\t\t\tif ( !isBoolean( options.copy ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', options.copy ) );\n\t\t\t}\n\t\t}\n\t\tif ( hasOwnProp( options, 'prng' ) ) {\n\t\t\tif ( !isFunction( options.prng ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', options.prng ) );\n\t\t\t}\n\t\t\trnorm = options.prng;\n\t\t}\n\t\t// If provided a PRNG, ignore the `state` option, as we don't support getting or setting PRNG state.\n\t\telse if ( hasOwnProp( options, 'state' ) ) {\n\t\t\topts.state = options.state;\n\t\t\tif ( !isUint32Array( options.state ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a Uint32Array. Option: `%s`.', 'state', options.state ) );\n\t\t\t}\n\t\t}\n\t\t// If provided a PRNG, ignore the `seed` option, as a `seed`, by itself, is insufficient to guarantee reproducibility. If provided a state, ignore the `seed` option, as a PRNG state should contain seed information.\n\t\telse if ( hasOwnProp( options, 'seed' ) ) {\n\t\t\topts.seed = options.seed;\n\t\t\tif ( options.seed === void 0 ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', options.seed ) );\n\t\t\t}\n\t\t}\n\t}\n\tif ( rnorm === void 0 ) {\n\t\trnorm = randn( opts );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n\tif ( options && options.prng ) {\n\t\tsetReadOnly( iter, 'seed', null );\n\t\tsetReadOnly( iter, 'seedLength', null );\n\t\tsetReadWriteAccessor( iter, 'state', constantFunction( null ), noop );\n\t\tsetReadOnly( iter, 'stateLength', null );\n\t\tsetReadOnly( iter, 'byteLength', null );\n\t\tsetReadOnly( iter, 'PRNG', null );\n\t} else {\n\t\tsetReadOnlyAccessor( iter, 'seed', getSeed );\n\t\tsetReadOnlyAccessor( iter, 'seedLength', getSeedLength );\n\t\tsetReadWriteAccessor( iter, 'state', getState, setState );\n\t\tsetReadOnlyAccessor( iter, 'stateLength', getStateLength );\n\t\tsetReadOnlyAccessor( iter, 'byteLength', getStateSize );\n\t\tsetReadOnly( iter, 'PRNG', rnorm.PRNG );\n\t}\n\n\treturn iter;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\treturn rnorm.seed;\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn rnorm.seedLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn rnorm.stateLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn rnorm.byteLength;\n\t}\n\n\t/**\n\t* Returns the current PRNG state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\treturn rnorm.state;\n\t}\n\n\t/**\n\t* Sets the PRNG state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\trnorm.state = s;\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = v.value + ( sigma*rnorm() );\n\t\t} else {\n\t\t\tv = NaN;\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterawgn( iterator[ iteratorSymbol ](), sigma, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterawgn;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which introduces additive white Gaussian noise (AWGN).\n*\n* @module @stdlib/simulate/iter/awgn\n*\n* @example\n* var iterSineWave = require( '@stdlib/simulate/iter/sine-wave' );\n* var iterawgn = require( '@stdlib/simulate/iter/awgn' );\n*\n* var sine = iterSineWave({\n*     'iter': 100\n* });\n*\n* var it = iterawgn( sine, 0.5 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'copy': true\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = defaults;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar setReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isUint32Array = require( '@stdlib/assert/is-uint32array' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar noop = require( '@stdlib/utils/noop' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar laplace = require( '@stdlib/random/base/laplace' ).factory;\nvar format = require( '@stdlib/string/format' );\nvar SQRT_TWO = require( '@stdlib/constants/float64/sqrt-two' );\nvar defaults = require( './defaults.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which introduces additive white Laplacian noise with standard deviation `sigma`.\n*\n* ## Method\n*\n* -   The variance of a Laplace (biexponential or double-exponential) distribution is given by\n*\n*     ```tex\n*     \\operatorname{Var} = 2b^2\n*     ```\n*\n*     where \\\\( b \\\\) is the distribution scale parameter.\n*\n* -   Accordingly, the standard deviation is then\n*\n*     ```tex\n*     \\sigma = b\\sqrt{2}\n*     ```\n*\n* -   Solving for \\\\( b \\\\), we derive the parameter transform necessary for generating a Laplacian random variable with standard deviation \\\\( \\sigma \\\\)\n*\n*     ```tex\n*     b = \\frac{\\sigma}{\\sqrt{2}}\n*     ```\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveNumber} sigma - standard deviation of the noise\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers on the interval `[0,1)`\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive number\n* @throws {TypeError} third argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {Iterator} iterator\n*\n* @example\n* var iterSineWave = require( '@stdlib/simulate/iter/sine-wave' );\n*\n* var sine = iterSineWave({\n*     'iter': 100\n* });\n*\n* var it = iterawln( sine, 0.5 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterawln( iterator, sigma, options ) {\n\tvar rlaplace;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveNumber( sigma ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive number. Value: `%s`.', sigma ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\topts.copy = options.copy;\n\t\t\tif ( !isBoolean( options.copy ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', options.copy ) );\n\t\t\t}\n\t\t}\n\t\tif ( hasOwnProp( options, 'prng' ) ) {\n\t\t\tif ( !isFunction( options.prng ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', options.prng ) );\n\t\t\t}\n\t\t\topts.prng = options.prng;\n\t\t}\n\t\t// If provided a PRNG, ignore the `state` option, as we don't support getting or setting PRNG state.\n\t\telse if ( hasOwnProp( options, 'state' ) ) {\n\t\t\topts.state = options.state;\n\t\t\tif ( !isUint32Array( options.state ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a Uint32Array. Option: `%s`.', 'state', options.state ) );\n\t\t\t}\n\t\t}\n\t\t// If provided a PRNG, ignore the `seed` option, as a `seed`, by itself, is insufficient to guarantee reproducibility. If provided a state, ignore the `seed` option, as a PRNG state should contain seed information.\n\t\telse if ( hasOwnProp( options, 'seed' ) ) {\n\t\t\topts.seed = options.seed;\n\t\t\tif ( options.seed === void 0 ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', options.seed ) );\n\t\t\t}\n\t\t}\n\t}\n\trlaplace = laplace( 0.0, sigma/SQRT_TWO, opts );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n\tif ( options && options.prng ) {\n\t\tsetReadOnly( iter, 'seed', null );\n\t\tsetReadOnly( iter, 'seedLength', null );\n\t\tsetReadWriteAccessor( iter, 'state', constantFunction( null ), noop );\n\t\tsetReadOnly( iter, 'stateLength', null );\n\t\tsetReadOnly( iter, 'byteLength', null );\n\t\tsetReadOnly( iter, 'PRNG', options.prng );\n\t} else {\n\t\tsetReadOnlyAccessor( iter, 'seed', getSeed );\n\t\tsetReadOnlyAccessor( iter, 'seedLength', getSeedLength );\n\t\tsetReadWriteAccessor( iter, 'state', getState, setState );\n\t\tsetReadOnlyAccessor( iter, 'stateLength', getStateLength );\n\t\tsetReadOnlyAccessor( iter, 'byteLength', getStateSize );\n\t\tsetReadOnly( iter, 'PRNG', rlaplace.PRNG );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\treturn rlaplace.seed;\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn rlaplace.seedLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn rlaplace.stateLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn rlaplace.byteLength;\n\t}\n\n\t/**\n\t* Returns the current PRNG state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\treturn rlaplace.state;\n\t}\n\n\t/**\n\t* Sets the PRNG state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\trlaplace.state = s;\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = v.value + rlaplace();\n\t\t} else {\n\t\t\tv = NaN;\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterawln( iterator[ iteratorSymbol ](), sigma, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterawln;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which introduces additive white Laplacian noise (AWLN).\n*\n* @module @stdlib/simulate/iter/awln\n*\n* @example\n* var iterSineWave = require( '@stdlib/simulate/iter/sine-wave' );\n* var iterawln = require( '@stdlib/simulate/iter/awln' );\n*\n* var sine = iterSineWave({\n*     'iter': 100\n* });\n*\n* var it = iterawln( sine, 0.5 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'copy': true\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = defaults;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar setReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isUint32Array = require( '@stdlib/assert/is-uint32array' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar noop = require( '@stdlib/utils/noop' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar format = require( '@stdlib/string/format' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar randu = require( '@stdlib/random/base/uniform' ).factory;\nvar SQRT_THREE = require( '@stdlib/constants/float64/sqrt-three' );\nvar defaults = require( './defaults.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which introduces additive white uniform noise with standard deviation `sigma`.\n*\n* ## Method\n*\n* -   The variance of a uniform distribution is given by\n*\n*     ```tex\n*     \\operatorname{Var} = \\frac{(b-a)^2}{12}\n*     ```\n*\n*     where \\\\( a \\\\) is the minimum support and \\\\( b \\\\) is the maximum support.\n*\n* -   Accordingly, to generate uniform noise having zero mean and a desired standard deviation, we let \\\\( a = -b \\\\) and solve for \\\\( b \\\\).\n*\n*     ```tex\n*     \\begin{align*}\n*     \\sigma &= \\frac{b-a}{\\sqrt{12}} \\\\\n*     \\sigma \\sqrt{12} &= b - a \\\\\n*     2 \\sigma \\sqrt{3} &= b - (-b) \\\\\n*     2 \\sigma \\sqrt{3} &= 2b \\\\\n*     b &= \\sigma \\sqrt{3}\n*     \\end{align*}\n*     ```\n*\n*     where \\\\( \\sigma \\\\) is the standard deviation.\n*\n* -   Thus, to generate uniform noise having zero mean and a desired standard deviation, we sample from \\\\( \\operatorname{unif}(-sigma\\sqrt{3}, sigma\\sqrt{3}) \\\\).\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveNumber} sigma - standard deviation of the noise\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers on the interval `[0,1)`\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive number\n* @throws {TypeError} third argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {Iterator} iterator\n*\n* @example\n* var iterSineWave = require( '@stdlib/simulate/iter/sine-wave' );\n*\n* var sine = iterSineWave({\n*     'iter': 100\n* });\n*\n* var it = iterawun( sine, 0.5 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterawun( iterator, sigma, options ) {\n\tvar runif;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar a;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveNumber( sigma ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive number. Value: `%s`.', sigma ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\topts.copy = options.copy;\n\t\t\tif ( !isBoolean( options.copy ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', options.copy ) );\n\t\t\t}\n\t\t}\n\t\tif ( hasOwnProp( options, 'prng' ) ) {\n\t\t\tif ( !isFunction( options.prng ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.', 'prng', options.prng ) );\n\t\t\t}\n\t\t\topts.prng = options.prng;\n\t\t}\n\t\t// If provided a PRNG, ignore the `state` option, as we don't support getting or setting PRNG state.\n\t\telse if ( hasOwnProp( options, 'state' ) ) {\n\t\t\topts.state = options.state;\n\t\t\tif ( !isUint32Array( options.state ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a Uint32Array. Option: `%s`.', 'state', options.state ) );\n\t\t\t}\n\t\t}\n\t\t// If provided a PRNG, ignore the `seed` option, as a `seed`, by itself, is insufficient to guarantee reproducibility. If provided a state, ignore the `seed` option, as a PRNG state should contain seed information.\n\t\telse if ( hasOwnProp( options, 'seed' ) ) {\n\t\t\topts.seed = options.seed;\n\t\t\tif ( options.seed === void 0 ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', options.seed ) );\n\t\t\t}\n\t\t}\n\t}\n\ta = sigma * SQRT_THREE;\n\trunif = randu( -a, a, opts );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n\tif ( options && options.prng ) {\n\t\tsetReadOnly( iter, 'seed', null );\n\t\tsetReadOnly( iter, 'seedLength', null );\n\t\tsetReadWriteAccessor( iter, 'state', constantFunction( null ), noop );\n\t\tsetReadOnly( iter, 'stateLength', null );\n\t\tsetReadOnly( iter, 'byteLength', null );\n\t\tsetReadOnly( iter, 'PRNG', options.prng );\n\t} else {\n\t\tsetReadOnlyAccessor( iter, 'seed', getSeed );\n\t\tsetReadOnlyAccessor( iter, 'seedLength', getSeedLength );\n\t\tsetReadWriteAccessor( iter, 'state', getState, setState );\n\t\tsetReadOnlyAccessor( iter, 'stateLength', getStateLength );\n\t\tsetReadOnlyAccessor( iter, 'byteLength', getStateSize );\n\t\tsetReadOnly( iter, 'PRNG', runif.PRNG );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\treturn runif.seed;\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn runif.seedLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn runif.stateLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn runif.byteLength;\n\t}\n\n\t/**\n\t* Returns the current PRNG state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\treturn runif.state;\n\t}\n\n\t/**\n\t* Sets the PRNG state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\trunif.state = s;\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = v.value + runif();\n\t\t} else {\n\t\t\tv = NaN;\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterawun( iterator[ iteratorSymbol ](), sigma, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterawun;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which introduces additive white uniform noise (AWUN).\n*\n* @module @stdlib/simulate/iter/awun\n*\n* @example\n* var iterSineWave = require( '@stdlib/simulate/iter/sine-wave' );\n* var iterawun = require( '@stdlib/simulate/iter/awun' );\n*\n* var sine = iterSineWave({\n*     'iter': 100\n* });\n*\n* var it = iterawun( sine, 0.5 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration] - pulse duration\n* @param {PositiveNumber} [options.amplitude] - amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'duration' ) ) {\n\t\topts.duration = options.duration;\n\t\tif ( !isPositiveInteger( options.duration ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'duration', options.duration ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isPositiveNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar cospi = require( '@stdlib/math/base/special/cospi' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar A0 = 0.62;\nvar A1 = 0.48;\nvar A2 = 0.38;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates a Bartlett-Hann window function.\n*\n* @private\n* @param {integer} t - value at which to evaluate the function\n* @param {integer} T - period\n* @param {number} A - amplitude\n* @returns {number} function value\n*/\nfunction bartlettHann( t, T, A ) {\n\tT -= 1;\n\treturn A * ( A0 - (A1*abs( (t/T)-0.5) ) - (A2*cospi( (2.0/T)*t) ) );\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a Bartlett-Hann pulse waveform.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=100] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration=options.period] - pulse duration\n* @param {PositiveNumber} [options.amplitude=1.0] - amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} pulse duration must be less than the period\n* @throws {RangeError} pulse duration must be greater than `2`\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterBartlettHannPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterBartlettHannPulse( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar i;\n\n\topts = {\n\t\t'duration': -1,\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.duration === -1 ) {\n\t\topts.duration = opts.period;\n\t}\n\tif ( opts.duration > opts.period ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be less than or equal to the period. Option: `%u`.', 'duration', opts.duration ) );\n\t}\n\tif ( opts.duration <= 2 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be greater than 2. Option: `%s`.', 'duration', opts.duration ) );\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt = (t+1) % opts.period;\n\t\treturn {\n\t\t\t'value': ( t < opts.duration ) ? bartlettHann( t, opts.duration, opts.amplitude ) : 0.0,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterBartlettHannPulse( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterBartlettHannPulse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a Bartlett-Hann pulse waveform.\n*\n* @module @stdlib/simulate/iter/bartlett-hann-pulse\n*\n* @example\n* var iterBartlettHannPulse = require( '@stdlib/simulate/iter/bartlett-hann-pulse' );\n*\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterBartlettHannPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration] - pulse duration\n* @param {PositiveNumber} [options.amplitude] - amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'duration' ) ) {\n\t\topts.duration = options.duration;\n\t\tif ( !isPositiveInteger( options.duration ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'duration', options.duration ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isPositiveNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a Bartlett pulse waveform.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=100] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration=options.period] - pulse duration\n* @param {PositiveNumber} [options.amplitude=1.0] - amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} pulse duration must be less than the period\n* @throws {RangeError} pulse duration must be greater than `2`\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterBartlettPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterBartlettPulse( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar s;\n\tvar i;\n\n\topts = {\n\t\t'duration': -1,\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.duration === -1 ) {\n\t\topts.duration = opts.period;\n\t}\n\tif ( opts.duration > opts.period ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be less than or equal to the period. Option: `%u`.', 'duration', opts.duration ) );\n\t}\n\tif ( opts.duration <= 2 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be greater than 2. Option: `%s`.', 'duration', opts.duration ) );\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\ts = 2.0 / (opts.duration-1);\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt = (t+1) % opts.period;\n\t\treturn {\n\t\t\t'value': ( t < opts.duration ) ? opts.amplitude*(1.0-abs((s*t)-1.0)) : 0.0,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterBartlettPulse( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterBartlettPulse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a Bartlett pulse waveform.\n*\n* @module @stdlib/simulate/iter/bartlett-pulse\n*\n* @example\n* var iterBartlettPulse = require( '@stdlib/simulate/iter/bartlett-pulse' );\n*\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterBartlettPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a cosine wave repeats\n* @param {NonNegativeNumber} [options.amplitude] - peak amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isNonNegativeNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar cospi = require( '@stdlib/math/base/special/cospi' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a cosine wave.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a cosine wave repeats\n* @param {NonNegativeNumber} [options.amplitude=1.0] - peak amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterCosineWave( opts );\n*\n* var v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns -1.0\n*\n* // ...\n*/\nfunction iterCosineWave( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar s;\n\tvar i;\n\n\topts = {\n\t\t'period': 10,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period; // normalize such that t \u03F5 [0,\u03C4]\n\t}\n\tt -= 1;\n\ts = 2.0 / opts.period;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\treturn {\n\t\t\t'value': opts.amplitude * cospi( s*t ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterCosineWave( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterCosineWave;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a cosine wave.\n*\n* @module @stdlib/simulate/iter/cosine-wave\n*\n* @example\n* var iterCosineWave = require( '@stdlib/simulate/iter/cosine-wave' );\n*\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterCosineWave( opts );\n*\n* var v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a Dirac comb.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a waveform repeats\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterDiracComb( opts );\n*\n* var v = iter.next().value;\n* // returns Infinity\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* // ...\n*/\nfunction iterDiracComb( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar i;\n\n\topts = {\n\t\t'period': 10,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period; // normalize such that t \u03F5 [0,T]\n\t}\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\treturn {\n\t\t\t'value': ( t === 0 ) ? PINF : 0.0,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDiracComb( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterDiracComb;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a Dirac comb.\n*\n* @module @stdlib/simulate/iter/dirac-comb\n*\n* @example\n* var iterDiracComb = require( '@stdlib/simulate/iter/dirac-comb' );\n*\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterDiracComb( opts );\n*\n* var v = iter.next().value;\n* // returns Infinity\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration] - pulse duration\n* @param {PositiveNumber} [options.amplitude] - amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'duration' ) ) {\n\t\topts.duration = options.duration;\n\t\tif ( !isPositiveInteger( options.duration ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'duration', options.duration ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isPositiveNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar cospi = require( '@stdlib/math/base/special/cospi' );\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar A0 = 0.21557895;\nvar A1 = 0.41663158;\nvar A2 = 0.277263158;\nvar A3 = 0.083578947;\nvar A4 = 0.006947368;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates the flat top window function.\n*\n* @private\n* @param {integer} t - value at which to evaluate the function\n* @param {number} A - amplitude\n* @param {integer} tau - period\n* @returns {number} function value\n*/\nfunction flatTop( t, A, tau ) {\n\tvar s = 2.0 / (tau-1);\n\treturn A * (A0 - (A1*cospi(s*t)) + (A2*cospi(2.0*s*t)) - (A3*cospi(3.0*s*t)) + (A4*cospi(4.0*s*t))); // eslint-disable-line max-len\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a flat top pulse waveform.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=100] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration=options.period] - pulse duration\n* @param {PositiveNumber} [options.amplitude=1.0] - amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} pulse duration must be less than the period\n* @throws {RangeError} pulse duration must be greater than `2`\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterFlatTopPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterFlatTopPulse( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar i;\n\n\topts = {\n\t\t'duration': -1,\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.duration === -1 ) {\n\t\topts.duration = opts.period;\n\t}\n\tif ( opts.duration > opts.period ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be less than or equal to the period. Option: `%u`.', 'duration', opts.duration ) );\n\t}\n\tif ( opts.duration <= 2 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be greater than 2. Option: `%s`.', 'duration', opts.duration ) );\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt = (t+1) % opts.period;\n\t\treturn {\n\t\t\t'value': ( t < opts.duration ) ? flatTop( t, opts.amplitude, opts.duration ) : 0.0,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFlatTopPulse( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFlatTopPulse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a flat top pulse waveform.\n*\n* @module @stdlib/simulate/iter/flat-top-pulse\n*\n* @example\n* var iterFlatTopPulse = require( '@stdlib/simulate/iter/flat-top-pulse' );\n*\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterFlatTopPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration] - pulse duration\n* @param {PositiveNumber} [options.amplitude] - amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'duration' ) ) {\n\t\topts.duration = options.duration;\n\t\tif ( !isPositiveInteger( options.duration ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'duration', options.duration ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isPositiveNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar cospi = require( '@stdlib/math/base/special/cospi' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a Hann pulse waveform.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=100] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration=options.period] - pulse duration\n* @param {PositiveNumber} [options.amplitude=1.0] - amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} pulse duration must be less than the period\n* @throws {RangeError} pulse duration must be greater than `2`\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterHannPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterHannPulse( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar A;\n\tvar t;\n\tvar s;\n\tvar i;\n\n\topts = {\n\t\t'duration': -1,\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.duration === -1 ) {\n\t\topts.duration = opts.period;\n\t}\n\tif ( opts.duration > opts.period ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be less than or equal to the period. Option: `%u`.', 'duration', opts.duration ) );\n\t}\n\tif ( opts.duration <= 2 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be greater than 2. Option: `%s`.', 'duration', opts.duration ) );\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\tA = 0.5 * opts.amplitude;\n\ts = 2.0 / (opts.duration-1);\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt = (t+1) % opts.period;\n\t\treturn {\n\t\t\t'value': ( t < opts.duration ) ? A*(1.0-cospi(s*t)) : 0.0,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterHannPulse( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterHannPulse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a Hann pulse waveform.\n*\n* @module @stdlib/simulate/iter/hann-pulse\n*\n* @example\n* var iterHannPulse = require( '@stdlib/simulate/iter/hann-pulse' );\n*\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterHannPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration] - pulse duration\n* @param {PositiveNumber} [options.amplitude] - amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'duration' ) ) {\n\t\topts.duration = options.duration;\n\t\tif ( !isPositiveInteger( options.duration ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'duration', options.duration ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isPositiveNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar sinc = require( '@stdlib/math/base/special/sinc' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a Lanczos pulse waveform.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=100] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration=options.period] - pulse duration\n* @param {PositiveNumber} [options.amplitude=1.0] - amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} pulse duration must be less than the period\n* @throws {RangeError} pulse duration must be greater than `2`\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterLanczosPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterLanczosPulse( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar s;\n\tvar i;\n\n\topts = {\n\t\t'duration': -1,\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.duration === -1 ) {\n\t\topts.duration = opts.period;\n\t}\n\tif ( opts.duration > opts.period ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be less than or equal to the period. Option: `%u`.', 'duration', opts.duration ) );\n\t}\n\tif ( opts.duration <= 2 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be greater than 2. Option: `%s`.', 'duration', opts.duration ) );\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\ts = 2.0 / (opts.duration-1);\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt = (t+1) % opts.period;\n\t\treturn {\n\t\t\t'value': ( t < opts.duration ) ? opts.amplitude*sinc((s*t)-1.0) : 0.0,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterLanczosPulse( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterLanczosPulse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a Lanczos pulse waveform.\n*\n* @module @stdlib/simulate/iter/lanczos-pulse\n*\n* @example\n* var iterLanczosPulse = require( '@stdlib/simulate/iter/lanczos-pulse' );\n*\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterLanczosPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude] - peak amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isNonNegativeNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isEven = require( '@stdlib/math/base/assert/is-even' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar sinpi = require( '@stdlib/math/base/special/sinpi' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a periodic sinc waveform.\n*\n* ## Method\n*\n* -   The periodic sinc function, or Dirichlet function, is defined as\n*\n*     ```tex\n*     D_N(x; A) = \\begin{cases}\n*     A \\cdot \\frac{\\sin(Nx/2)}{N\\sin(x/2)} & x \\neq 2\\pi k\\ \\textrm{for} k = 0, \\pm 1, \\pm 2, \\pm 3, \\ldots \\\\\n*     A \\cdot (-1)^{k(N-1)} & x = 2\\pi k\\ \\textrm{for} k = 0, \\pm 1, \\pm 2, \\pm 3, \\ldots\n*     \\end{cases}\n*     ```\n*\n*     where, for odd \\\\( N \\\\), the waveform period is \\\\( 2\\pi \\\\), and, for even \\\\( N \\\\), the waveform period is \\\\( 4\\pi \\\\).\n*\n* -   In order to evaluate the periodic sinc function in terms of an iteration number \\\\( t \\\\) and a specified period (period \\\\( \\tau \\\\)), rather than radians, for odd \\\\( N \\\\), we define\n*\n*     ```tex\n*     x = \\frac{2\\pi(t-\\varphi)}{\\tau}\n*     ```\n*\n*     and, for even \\\\( N \\\\), we define\n*\n*     ```tex\n*     x = \\frac{4\\pi(t-\\varphi)}{\\tau}\n*     ```\n*\n*     and substitute accordingly.\n*\n* @param {PositiveInteger} n - order\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude=1.0] - peak amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterPeriodicSinc( 7 );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterPeriodicSinc( n, options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar sgn;\n\tvar hwf;\n\tvar hw;\n\tvar t;\n\tvar s;\n\tvar i;\n\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\topts = {\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period; // normalize such that t \u03F5 [0,\u03C4]\n\t}\n\tif ( isEven( n ) ) {\n\t\tif ( opts.offset >= 0 ) {\n\t\t\tsgn = -1.0;\n\t\t} else {\n\t\t\tsgn = 1.0;\n\t\t}\n\t\t// Note: when `n` is even, the waveform period (in radians) is 4\u03C0, so we need to adjust the \"period\" parameter to ensure that the waveform repeats within the specified number of iterations:\n\t\thw = opts.period / 2;\n\t\thwf = floor( hw ); // note: \u03C4 could be an odd number; in which case, negative peaks happen \"between\" two iterations (t%\u03C4 and t%(\u03C4+1))\n\t\ts = n / hw;\n\t} else {\n\t\ts = n / opts.period;\n\t}\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', ( sgn === void 0 ) ? next2 : next1 );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\tif ( t === 0 || t === hw ) {\n\t\t\tsgn *= -1.0;\n\t\t\tv = sgn * opts.amplitude;\n\t\t} else {\n\t\t\tif ( t === hwf ) {\n\t\t\t\t// We just passed a negative peak, so we need flip the sign in order to ensure that the waveform at `t%\u03C4=0` is the correct sign:\n\t\t\t\tsgn *= -1.0;\n\t\t\t}\n\t\t\tv = opts.amplitude * sinpi(s*t) / ( n*sinpi(t/hw) );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\tif ( t === 0 ) {\n\t\t\tv = opts.amplitude;\n\t\t} else {\n\t\t\tv = opts.amplitude * sinpi(s*t) / ( n*sinpi(t/opts.period) );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterPeriodicSinc( n, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterPeriodicSinc;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a periodic sinc waveform.\n*\n* @module @stdlib/simulate/iter/periodic-sinc\n*\n* @example\n* var iterPeriodicSinc = require( '@stdlib/simulate/iter/periodic-sinc' );\n*\n* var iter = iterPeriodicSinc( 7 );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration] - number of consecutive iterations of maximum amplitude during one period\n* @param {number} [options.min] - minimum amplitude\n* @param {number} [options.max] - maximum amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'duration' ) ) {\n\t\topts.duration = options.duration;\n\t\tif ( !isPositiveInteger( options.duration ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'duration', options.duration ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'min' ) ) {\n\t\topts.min = options.min;\n\t\tif ( !isNumber( options.min ) || isnan( options.min ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'min', options.min ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'max' ) ) {\n\t\topts.max = options.max;\n\t\tif ( !isNumber( options.max ) || isnan( options.max ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'max', options.max ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a pulse waveform.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration=floor(options.period/2)] - number of consecutive iterations of maximum amplitude during one period\n* @param {number} [options.min=0.0] - minimum amplitude\n* @param {number} [options.max=1.0] - maximum amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} pulse duration must be less than the period\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterPulse( opts );\n*\n* var v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* // ...\n*/\nfunction iterPulse( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar i;\n\n\topts = {\n\t\t'duration': -1,\n\t\t'period': 10,\n\t\t'min': 0.0,\n\t\t'max': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.duration === -1 ) {\n\t\topts.duration = floor( opts.period/2 );\n\t}\n\tif ( opts.duration >= opts.period ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be less than the period. Option: `%s`.', 'duration', opts.duration ) );\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt = (t+1) % opts.period;\n\t\treturn {\n\t\t\t'value': ( t < opts.duration ) ? opts.max : opts.min,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterPulse( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterPulse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a pulse waveform.\n*\n* @module @stdlib/simulate/iter/pulse\n*\n* @example\n* var iterPulse = require( '@stdlib/simulate/iter/pulse' );\n*\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterPulse( opts );\n*\n* var v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude] - peak amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isNonNegativeNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar tan = require( '@stdlib/math/base/special/tan' );\nvar atan = require( '@stdlib/math/base/special/atan' );\nvar HALF_PI = require( '@stdlib/constants/float64/half-pi' );\nvar PI = require( '@stdlib/constants/float64/pi' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a sawtooth wave.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude=1.0] - peak amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterSawtoothWave( opts );\n*\n* var v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns ~0.5\n*\n* v = iter.next().value;\n* // returns ~1.0\n*\n* // ...\n*/\nfunction iterSawtoothWave( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar s;\n\tvar a;\n\tvar i;\n\n\topts = {\n\t\t'period': 10,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period; // normalize such that t \u03F5 [0,\u03C4]\n\t}\n\tt -= 1;\n\ts = PI / opts.period;\n\ta = opts.amplitude / HALF_PI;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\treturn {\n\t\t\t'value': a * atan( tan( s*t ) ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterSawtoothWave( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSawtoothWave;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a sawtooth wave.\n*\n* @module @stdlib/simulate/iter/sawtooth-wave\n*\n* @example\n* var iterSawtoothWave = require( '@stdlib/simulate/iter/sawtooth-wave' );\n*\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterSawtoothWave( opts );\n*\n* var v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns ~0.5\n*\n* v = iter.next().value;\n* // returns ~1.0\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a sine wave repeats\n* @param {NonNegativeNumber} [options.amplitude] - peak amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isNonNegativeNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar sinpi = require( '@stdlib/math/base/special/sinpi' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a sine wave.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a sine wave repeats\n* @param {NonNegativeNumber} [options.amplitude=1.0] - peak amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterSineWave( opts );\n*\n* var v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* // ...\n*/\nfunction iterSineWave( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar s;\n\tvar i;\n\n\topts = {\n\t\t'period': 10,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period; // normalize such that t \u03F5 [0,\u03C4]\n\t}\n\tt -= 1;\n\ts = 2.0 / opts.period;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\treturn {\n\t\t\t'value': opts.amplitude * sinpi( s*t ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterSineWave( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSineWave;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a sine wave.\n*\n* @module @stdlib/simulate/iter/sine-wave\n*\n* @example\n* var iterSineWave = require( '@stdlib/simulate/iter/sine-wave' );\n*\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterSineWave( opts );\n*\n* var v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isEven = require( '@stdlib/math/base/assert/is-even' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a square wave repeats\n* @param {number} [options.min] - minimum amplitude\n* @param {number} [options.max] - maximum amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) || !isEven( options.period ) ) { // eslint-disable-line max-len\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive even integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'min' ) ) {\n\t\topts.min = options.min;\n\t\tif ( !isNumber( options.min ) || isnan( options.min ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'min', options.min ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'max' ) ) {\n\t\topts.max = options.max;\n\t\tif ( !isNumber( options.max ) || isnan( options.max ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'max', options.max ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a square wave.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a square wave repeats (this must be a positive even integer)\n* @param {number} [options.min=-1.0] - minimum amplitude\n* @param {number} [options.max=1.0] - maximum amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterSquareWave( opts );\n*\n* var v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns -1.0\n*\n* // ...\n*/\nfunction iterSquareWave( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar h;\n\tvar i;\n\n\topts = {\n\t\t'period': 10,\n\t\t'min': -1.0,\n\t\t'max': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\tt -= 1;\n\th = opts.period / 2;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\treturn {\n\t\t\t'value': ( (t%opts.period) < h ) ? opts.max : opts.min,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterSquareWave( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSquareWave;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a square wave.\n*\n* @module @stdlib/simulate/iter/square-wave\n*\n* @example\n* var iterSquareWave = require( '@stdlib/simulate/iter/square-wave' );\n*\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterSquareWave( opts );\n*\n* var v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns -1.0\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude] - peak amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isNonNegativeNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar sinpi = require( '@stdlib/math/base/special/sinpi' );\nvar asin = require( '@stdlib/math/base/special/asin' );\nvar HALF_PI = require( '@stdlib/constants/float64/half-pi' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a triangle wave.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude=1.0] - peak amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterTriangleWave( opts );\n*\n* var v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* // ...\n*/\nfunction iterTriangleWave( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar s;\n\tvar a;\n\tvar i;\n\n\topts = {\n\t\t'period': 10,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period; // normalize such that t \u03F5 [0,\u03C4]\n\t}\n\tt -= 1;\n\ts = 2.0 / opts.period;\n\ta = opts.amplitude / HALF_PI;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\treturn {\n\t\t\t'value': a * asin( sinpi( s*t ) ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterTriangleWave( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterTriangleWave;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a triangle wave.\n*\n* @module @stdlib/simulate/iter/triangle-wave\n*\n* @example\n* var iterTriangleWave = require( '@stdlib/simulate/iter/triangle-wave' );\n*\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterTriangleWave( opts );\n*\n* var v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name iterawgn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/awgn}\n*/\nsetReadOnly( ns, 'iterawgn', require( './../../iter/awgn' ) );\n\n/**\n* @name iterawln\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/awln}\n*/\nsetReadOnly( ns, 'iterawln', require( './../../iter/awln' ) );\n\n/**\n* @name iterawun\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/awun}\n*/\nsetReadOnly( ns, 'iterawun', require( './../../iter/awun' ) );\n\n/**\n* @name iterBartlettHannPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/bartlett-hann-pulse}\n*/\nsetReadOnly( ns, 'iterBartlettHannPulse', require( './../../iter/bartlett-hann-pulse' ) );\n\n/**\n* @name iterBartlettPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/bartlett-pulse}\n*/\nsetReadOnly( ns, 'iterBartlettPulse', require( './../../iter/bartlett-pulse' ) );\n\n/**\n* @name iterCosineWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/cosine-wave}\n*/\nsetReadOnly( ns, 'iterCosineWave', require( './../../iter/cosine-wave' ) );\n\n/**\n* @name iterDiracComb\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/dirac-comb}\n*/\nsetReadOnly( ns, 'iterDiracComb', require( './../../iter/dirac-comb' ) );\n\n/**\n* @name iterFlatTopPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/flat-top-pulse}\n*/\nsetReadOnly( ns, 'iterFlatTopPulse', require( './../../iter/flat-top-pulse' ) );\n\n/**\n* @name iterHannPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/hann-pulse}\n*/\nsetReadOnly( ns, 'iterHannPulse', require( './../../iter/hann-pulse' ) );\n\n/**\n* @name iterLanczosPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/lanczos-pulse}\n*/\nsetReadOnly( ns, 'iterLanczosPulse', require( './../../iter/lanczos-pulse' ) );\n\n/**\n* @name iterPeriodicSinc\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/periodic-sinc}\n*/\nsetReadOnly( ns, 'iterPeriodicSinc', require( './../../iter/periodic-sinc' ) );\n\n/**\n* @name iterPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/pulse}\n*/\nsetReadOnly( ns, 'iterPulse', require( './../../iter/pulse' ) );\n\n/**\n* @name iterSawtoothWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/sawtooth-wave}\n*/\nsetReadOnly( ns, 'iterSawtoothWave', require( './../../iter/sawtooth-wave' ) );\n\n/**\n* @name iterSineWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/sine-wave}\n*/\nsetReadOnly( ns, 'iterSineWave', require( './../../iter/sine-wave' ) );\n\n/**\n* @name iterSquareWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/square-wave}\n*/\nsetReadOnly( ns, 'iterSquareWave', require( './../../iter/square-wave' ) );\n\n/**\n* @name iterTriangleWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/triangle-wave}\n*/\nsetReadOnly( ns, 'iterTriangleWave', require( './../../iter/triangle-wave' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name iterators\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/simulate/iter}\n*/\nsetReadOnly( ns, 'iterators', require( './../iter' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],
  "mappings": "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",
  "names": ["require_defaults", "__commonJSMin", "exports", "module", "defaults", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "setReadOnlyAccessor", "setReadWriteAccessor", "isIteratorLike", "isPositiveNumber", "isPlainObject", "isFunction", "isBoolean", "isUint32Array", "hasOwnProp", "noop", "constantFunction", "iteratorSymbol", "format", "randn", "defaults", "iterawgn", "iterator", "sigma", "options", "rnorm", "opts", "iter", "FLG", "next", "end", "factory", "getSeed", "getSeedLength", "getState", "setState", "getStateLength", "getStateSize", "s", "v", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_defaults", "__commonJSMin", "exports", "module", "defaults", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "setReadOnlyAccessor", "setReadWriteAccessor", "isIteratorLike", "isPositiveNumber", "isPlainObject", "isFunction", "isBoolean", "isUint32Array", "hasOwnProp", "noop", "constantFunction", "iteratorSymbol", "laplace", "format", "SQRT_TWO", "defaults", "iterawln", "iterator", "sigma", "options", "rlaplace", "opts", "iter", "FLG", "next", "end", "factory", "getSeed", "getSeedLength", "getState", "setState", "getStateLength", "getStateSize", "s", "v", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_defaults", "__commonJSMin", "exports", "module", "defaults", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "setReadOnlyAccessor", "setReadWriteAccessor", "isIteratorLike", "isPositiveNumber", "isPlainObject", "isFunction", "isBoolean", "isUint32Array", "hasOwnProp", "noop", "constantFunction", "format", "iteratorSymbol", "randu", "SQRT_THREE", "defaults", "iterawun", "iterator", "sigma", "options", "runif", "opts", "iter", "FLG", "a", "next", "end", "factory", "getSeed", "getSeedLength", "getState", "setState", "getStateLength", "getStateSize", "s", "v", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isPositiveNumber", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "abs", "cospi", "format", "validate", "A0", "A1", "A2", "bartlettHann", "T", "A", "iterBartlettHannPulse", "options", "opts", "iter", "FLG", "err", "t", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isPositiveNumber", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "format", "abs", "validate", "iterBartlettPulse", "options", "opts", "iter", "FLG", "err", "t", "s", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "isNonNegativeNumber", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "cospi", "validate", "iterCosineWave", "options", "opts", "iter", "FLG", "err", "t", "s", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "PINF", "validate", "iterDiracComb", "options", "opts", "iter", "FLG", "err", "t", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isPositiveNumber", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "format", "cospi", "validate", "A0", "A1", "A2", "A3", "A4", "flatTop", "A", "tau", "s", "iterFlatTopPulse", "options", "opts", "iter", "FLG", "err", "t", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isPositiveNumber", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "format", "cospi", "validate", "iterHannPulse", "options", "opts", "iter", "FLG", "err", "A", "t", "s", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isPositiveNumber", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "format", "sinc", "validate", "iterLanczosPulse", "options", "opts", "iter", "FLG", "err", "t", "s", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "isNonNegativeNumber", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "isPositiveInteger", "isEven", "iteratorSymbol", "format", "sinpi", "floor", "validate", "iterPeriodicSinc", "n", "options", "opts", "iter", "FLG", "err", "sgn", "hwf", "hw", "t", "s", "i", "next2", "next1", "end", "factory", "v", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isNumber", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "isnan", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "format", "floor", "validate", "iterPulse", "options", "opts", "iter", "FLG", "err", "t", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "isNonNegativeNumber", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "tan", "atan", "HALF_PI", "PI", "validate", "iterSawtoothWave", "options", "opts", "iter", "FLG", "err", "t", "s", "a", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "isNonNegativeNumber", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "sinpi", "validate", "iterSineWave", "options", "opts", "iter", "FLG", "err", "t", "s", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isNumber", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "isEven", "isnan", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "validate", "iterSquareWave", "options", "opts", "iter", "FLG", "err", "t", "h", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "isNonNegativeNumber", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "sinpi", "asin", "HALF_PI", "validate", "iterTriangleWave", "options", "opts", "iter", "FLG", "err", "t", "s", "a", "i", "next", "end", "factory", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "ns", "setReadOnly", "ns"]
}
